generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answer_options {
  id           BigInt    @id(map: "pilihan_jawaban_pkey") @default(autoincrement())
  question_id  BigInt
  options_text String    @db.VarChar(255)
  is_right     Boolean?  @default(false)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  order        Int       @db.SmallInt
  questions    questions @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_pertanyaan")
}

model questions {
  id             BigInt           @id(map: "pertanyaan_pkey") @default(autoincrement())
  quiz_id        Int
  question_text  String
  question_type  tipe_pertanyaan
  order_number   Int?
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  required       Boolean?
  answer_options answer_options[]
  quiz           quiz             @relation(fields: [quiz_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_kuis")
}

model quiz {
  id          Int         @id(map: "kuis_pkey") @default(autoincrement())
  title       String      @db.VarChar(255)
  created_at  DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?   @default(now()) @db.Timestamptz(6)
  description String?
  tag_id      BigInt?
  questions   questions[]
  tag         tag?        @relation(fields: [tag_id], references: [id], onUpdate: NoAction, map: "fk_tag")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname   String
  username   String   @unique
  email      String   @unique
  password   String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  role       String   @default("user") @db.VarChar
}

model tag {
  id   BigInt @id @default(autoincrement())
  name String @unique @db.VarChar(100)
  quiz quiz[]
}

enum kuis_status {
  draft
  published
}

enum tipe_pertanyaan {
  multiple_choice
  short_answer
  checkbox
  long_answer
}
